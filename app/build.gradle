plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
}

android {
    namespace 'net.osmtracker'
    compileSdk 35

    defaultConfig {
        applicationId "net.osmtracker"
        minSdk 25
        targetSdk 35
        multiDexEnabled true

        // Version code should be increased after each release
        versionCode 63
        versionName new Date().format('yyyy.MM.dd')

        testApplicationId "net.osmtracker.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.findByName('release')
        }
        debug {
            versionNameSuffix "-dev"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    signingConfigs {
        if (project.hasProperty('signing.storeFile')) {
            release {
                storeFile file(project.property('signing.storeFile'))
                storePassword project.property('signing.storePassword')
                keyAlias project.property('signing.keyAlias')
                keyPassword project.property('signing.keyPassword')
            }
        }
    }

    packagingOptions {
        resources.excludes += [
            'META-INF/DEPENDENCIES', 
            'META-INF/LICENSE.txt', 
            'META-INF/NOTICE.txt'
        ]
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            it.jvmArgs = [
                '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.util=ALL-UNNAMED'
            ]
        }
        animationsDisabled = true
    }
}

dependencies {
    // Lib to show OSM map as background
    implementation 'org.osmdroid:osmdroid-android:6.1.20'
    // OAuth
    implementation 'net.openid:appauth:0.11.1'
    // For upload traces to osm server
    implementation('de.westnordost:osmapi-traces:3.1') {
        // Already included in Android
        exclude group: 'net.sf.kxml', module: 'kxml2'
        exclude group: 'xmlpull', module: 'xmlpull'
    }
    // App intro
    implementation 'com.github.AppIntro:AppIntro:6.3.1'

    implementation 'com.google.android.material:material:1.12.0'
    implementation 'org.slf4j:slf4j-android:1.7.30'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'androidx.core:core:1.15.0'
    implementation "androidx.preference:preference:1.2.1"
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.7.0'

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Robolectric environment
    testImplementation "androidx.test:core:1.6.1"
    // Mockito framework
    testImplementation "org.mockito:mockito-core:3.12.4"

    testImplementation 'org.powermock:powermock-core:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    // Required for local unit tests. Prevent null in JSONObject, JSONArray, etc.
    testImplementation 'org.json:json:20240303'

    // Required for instrumented tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
}

repositories {
    google()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

apply from: "jacoco.gradle"
