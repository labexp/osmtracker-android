apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

android {

    useLibrary 'org.apache.http.legacy'
    compileSdk 35

    defaultConfig {
        applicationId "net.osmtracker"
        minSdkVersion 25
        targetSdkVersion 35
        multiDexEnabled true

        // versionCode should be increased after each release
        versionCode 63
        versionName new Date().format('yyyy.MM.dd')

        testApplicationId "net.osmtracker.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    signingConfigs {
        // Create a file $HOME/.gradle/gradle.properties
        // containing the values signing.storeFile=..., etc.
        if (project.hasProperty('signing.storeFile')) {
            release {
                storeFile file(project.property('signing.storeFile'))
                storePassword project.property('signing.storePassword')
                keyAlias project.property('signing.keyAlias')
                keyPassword project.property('signing.keyPassword')
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            if (signingConfigs.hasProperty('release')) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            versionNameSuffix "-dev"
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt']
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }

    defaultConfig {
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            it.jvmArgs '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
                       '--add-opens', 'java.base/java.util=ALL-UNNAMED'
        }
        animationsDisabled = true
    }
    namespace 'net.osmtracker'

}

dependencies {

    //implementation 'org.apache.james:apache-mime4j-core:0.8.3'

    //implementation 'org.apache.httpcomponents:httpmime:4.5.6'

    implementation 'org.osmdroid:osmdroid-android:6.1.20'
    //implementation 'org.apache.httpcomponents:httpcore:4.4.13'

    //implementation 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
    implementation 'org.slf4j:slf4j-android:1.7.30'
    implementation 'androidx.core:core:1.6.0'
    implementation 'org.apache.commons:commons-io:1.3.2'

    // For upload traces to osm server
    implementation 'net.openid:appauth:0.11.1'
    implementation 'de.westnordost:osmapi-traces:3.1'

    // Required for local unit tests (JUnit 4 framework)
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    // Required for local unit tests. Prevent null in JSONObjet, JSONArray, etc.
    testImplementation 'org.json:json:20240303'

    testImplementation 'org.powermock:powermock-core:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'

    // Required for instrumented tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'

    //compileOnly 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'

    // AndroidX Capable version
    implementation 'com.github.AppIntro:AppIntro:6.0.0'
    implementation 'com.google.android.material:material:1.4.0'


}

configurations.all {
    // it's already included in Android and not need from osmapi
    exclude group: 'net.sf.kxml', module: 'kxml2'
    exclude group: 'xmlpull', module: 'xmlpull'
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

jacoco {
    toolVersion = "0.8.12"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

tasks.register("jacocoTestReport", JacocoReport) {
    dependsOn testDebugUnitTest

    reports {
        xml.required = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*']
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(fileTree(dir: layout.buildDirectory.dir("intermediates/javac/debug").get().asFile, excludes: fileFilter))
    executionData.setFrom(fileTree(dir: layout.buildDirectory.get(), includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec'
    ]))

}